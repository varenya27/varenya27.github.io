[["Map",1,2,9,10,79,80],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.14.1","content-config-digest","2d274697c4393534","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://varenya27.github.io\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[null],\"rehypePlugins\":[null],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"staticImportMetaEnv\":false,\"chromeDevtoolsWorkspace\":false,\"failOnPrerenderConflict\":false},\"legacy\":{\"collections\":false}}","research",["Map",11,12,28,29,43,44,64,65],"galaxy-clusters",{"id":11,"data":13,"filePath":17,"digest":18,"rendered":19},{"title":14,"description":15,"pubDate":16},"Dark Matter in Galaxy Clusters","Lorem ipsum dolor sit amet",["Date","2023-02-01T05:00:00.000Z"],"src/content/research/galaxy-clusters.md","d936bb561e64a5d5",{"html":20,"metadata":21},"",{"headings":22,"localImagePaths":23,"remoteImagePaths":24,"frontmatter":25,"imagePaths":27},[],[],[],{"title":14,"description":15,"pubDate":26},"Feb 01 2023",[],"r-modes",{"id":28,"data":30,"filePath":33,"digest":34,"rendered":35},{"title":31,"description":15,"pubDate":32},"r-Modes in Pulsars",["Date","2023-11-28T05:00:00.000Z"],"src/content/research/r-modes.md","7ae880be18b7edce",{"html":20,"metadata":36},{"headings":37,"localImagePaths":38,"remoteImagePaths":39,"frontmatter":40,"imagePaths":42},[],[],[],{"title":31,"description":15,"pubDate":41},"Nov 28 2023",[],"surrogate-models",{"id":43,"data":45,"body":48,"filePath":49,"digest":50,"rendered":51},{"title":46,"description":15,"pubDate":47},"Surrogate Modeling",["Date","2025-01-02T05:00:00.000Z"],"# Quick Links:\n[GW PE Runs](/gw/index.html)","src/content/research/surrogate-models.md","f86f9c56ed1424b5",{"html":52,"metadata":53},"\u003Ch1 id=\"quick-links\">Quick Links:\u003C/h1>\n\u003Cp>\u003Ca href=\"/gw/index.html\">GW PE Runs\u003C/a>\u003C/p>",{"headings":54,"localImagePaths":59,"remoteImagePaths":60,"frontmatter":61,"imagePaths":63},[55],{"depth":56,"slug":57,"text":58},1,"quick-links","Quick Links:",[],[],{"title":46,"description":15,"pubDate":62},"Jan 02 2025",[],"tully-fisher",{"id":64,"data":66,"filePath":69,"digest":70,"rendered":71},{"title":67,"description":15,"pubDate":68},"Tully-Fisher Relation",["Date","2024-06-13T04:00:00.000Z"],"src/content/research/tully-fisher.md","84a4ee4c33bd81ba",{"html":20,"metadata":72},{"headings":73,"localImagePaths":74,"remoteImagePaths":75,"frontmatter":76,"imagePaths":78},[],[],[],{"title":67,"description":15,"pubDate":77},"Jun 13 2024",[],"blog",["Map",81,82],"gwsurrogate_pbilby",{"id":81,"data":83,"body":87,"filePath":88,"assetImports":89,"digest":91,"rendered":92},{"title":84,"description":15,"pubDate":85,"heroImage":86},"GW150914 Parameter Estimation with Surrogate Models",["Date","2025-10-03T04:00:00.000Z"],"__ASTRO_IMAGE_../../assets/NRHybSur3dq8_waveform_time_domain.png","|                    |                 |\n| ------------------ | --------------- |\n| PE Code            | parallel_bilby  |\n| Waveform Generator | `gwsurrogate`/  |\n| Implementation     | `gwsignal`-like |\n| Waveform Model     | NRHybSur3dq8    |\n| Cluster            | Unity           |\n\n# gwsurr.py\n\u003Cdetails>\n\u003Csummary>Show Code\u003C/summary>\n\n```python\ntry:\n    import gwsurrogate as gwsurr\nexcept ImportError:\n    print(\"The gwsurrogate package has failed to load, exiting\")\n\nfrom importlib_metadata import metadata\nimport lal\nimport numpy as np\nfrom astropy.coordinates import Angle, SkyCoord\nfrom gwpy.timeseries import TimeSeries\nimport astropy.units as u\n\nfrom lalsimulation.gwsignal.core.waveform import CompactBinaryCoalescenceGenerator\nimport lalsimulation.gwsignal.core.gw as gw\nfrom lalsimulation.gwsignal.core.utils import add_params_units\nimport lalsimulation as lalsim \n\n# ignore spin magnitude outside training space warnings\nimport warnings\nwarnings.filterwarnings('ignore', message='.*Spin')\n\nclass NRHybSur3dq8_gwsurr(CompactBinaryCoalescenceGenerator):\n    def __init__(self, **kwargs):\n        self.sur = gwsurr.LoadSurrogate(\"NRHybSur3dq8\")\n        self._update_domains()\n\n    @property\n    def metadata(self):\n        metadata = {\n            \"type\": \"aligned-spin\",\n            \"f_ref_spin\": True,\n            \"modes\": True,\n            \"polarizations\": True,\n            \"implemented_domain\": \"time\",\n            \"approximant\" : 'NRSurr',\n            \"implementation\" : \"Python\",\n            \"conditioning_routines\" : 'gwsignal'\n        }\n        return metadata\n\n    def generate_td_modes(self, **parameters):\n        self.parameter_check(units_sys='Cosmo', **parameters)\n        self.waveform_dict = self._strip_units(self.waveform_dict)\n        fmin, dt = self.waveform_dict[\"f22_start\"], self.waveform_dict[\"deltaT\"]\n        f_ref = self.waveform_dict[\"f22_ref\"]\n\n        m1, m2 = self.waveform_dict[\"mass1\"], self.waveform_dict[\"mass2\"]\n        s1z= self.waveform_dict[\"spin1z\"]\n        s2z= self.waveform_dict[\"spin2z\"]\n        chi1 = np.array( [\n            0.,\n            0.,\n            s1z,\n        ])\n        chi2 = np.array( [\n            0.,\n            0.,\n            s2z,\n        ])\n        dist = self.waveform_dict[\"distance\"]\n        q = m1 / m2  # This is the gwsurrogate convention, q=m1/m2>=1\n        if q \u003C 1.0:\n            q = 1 / q\n\n\n        # VU: reduce fmin to make sure tapering doesn't remove signal: [cf L#1046 in SimInspiral.c]\n        extra_cycles = 3. \n        extra_time_fraction = 0.1\n        m1_kg = m1 * lal.MSUN_SI\n        m2_kg = m2 * lal.MSUN_SI\n        tchirp = lalsim.SimInspiralChirpTimeBound(fmin, m1_kg, m2_kg, s1z, s2z)\n        s = lalsim.SimInspiralFinalBlackHoleSpinBound(s1z,s2z)\n        tmerge = lalsim.SimInspiralMergeTimeBound(m1_kg,m2_kg)+lalsim.SimInspiralRingdownTimeBound(m1_kg+m2_kg,s)\n        textra = extra_cycles / fmin\n        fstart = lalsim.SimInspiralChirpStartFrequencyBound((1.+extra_time_fraction)*tchirp+tmerge+textra,m1_kg,m2_kg)\n\n        times, h, dyn = self.sur(\n            q,\n            chi1,\n            chi2,\n            dt=dt,\n            f_low=fstart,\n            f_ref=f_ref,\n            units=\"mks\",  # Output in SI units\n            M=m1 + m2,  # In solar masses\n            dist_mpc=dist/1e6,  # In Mpc\n        )\n\n        hlm = self._to_gwpy_series(h, times)\n        return gw.GravitationalWaveModes(hlm)\n\n    def generate_td_waveform(self, **parameters):\n        # VU: added pi/2-phi_ref to match LALSuite convention\n        theta, phi = parameters['inclination'], (np.pi/2-parameters['phi_ref'].value)*u.rad\n        hlm = self.generate_td_modes(**parameters)\n        hp, hc = hlm(theta, phi)\n        hp, hc = TimeSeries(hp, name='hplus'), TimeSeries(hc, name='hcross')\n        return hp, hc\n\n    def generate_fd_polarizations_from_td(self, **parameters):\n        # Adjust deltaT depending on sampling rate\n        fmax = parameters[\"f_max\"].value\n        f_nyquist = fmax\n        deltaF = 0\n        if \"deltaF\" in parameters.keys():\n            deltaF = parameters[\"deltaF\"].value\n\n        if deltaF != 0:\n            n = int(np.round(fmax / deltaF))\n            if n & (n - 1):\n                chirplen_exp = np.frexp(n)\n                f_nyquist = np.ldexp(1, int(chirplen_exp[1])) * deltaF\n\n        deltaT = 0.5 / f_nyquist\n        parameters[\"deltaT\"] = deltaT*u.s\n\n\n        hp_,hc_ = self.generate_td_waveform(**parameters)\n        # VU: set epoch to merger time according to surrogate convention (instead of start time)\n        epoch = lal.LIGOTimeGPS(\n            hp_.times[np.abs(np.array(hp_.times)).argmin()].value\n        )\n        hp = lal.CreateREAL8TimeSeries(\n            \"hplus\", epoch, 0, parameters[\"deltaT\"].value, lal.DimensionlessUnit, len(hp_)\n        )\n        hc = lal.CreateREAL8TimeSeries(\n            \"hcross\", epoch, 0, parameters[\"deltaT\"].value, lal.DimensionlessUnit, len(hc_),\n        )\n\n        hp.data.data = hp_.value\n        hc.data.data = hc_.value\n\n        m1 = parameters['mass1'].value\n        m2 = parameters['mass2'].value\n        s1z= parameters['spin1z'].value\n        s2z= parameters['spin2z'].value \n        fmin = parameters['f22_start'].value\n        extra_cycles = 3. \n        extra_time_fraction = 0.1\n        m1_kg = m1 * lal.MSUN_SI\n        m2_kg = m2 * lal.MSUN_SI\n        tchirp = lalsim.SimInspiralChirpTimeBound(fmin, m1_kg, m2_kg, s1z, s2z)\n        s = lalsim.SimInspiralFinalBlackHoleSpinBound(s1z,s2z)\n        tmerge = lalsim.SimInspiralMergeTimeBound(m1_kg,m2_kg)+lalsim.SimInspiralRingdownTimeBound(m1_kg+m2_kg,s)\n        textra = extra_cycles / fmin\n        fstart = lalsim.SimInspiralChirpStartFrequencyBound((1.+extra_time_fraction)*tchirp+tmerge+textra,m1_kg,m2_kg)\n\n        lalsim.SimInspiralTDConditionStage1(hp,hc, extra_time_fraction * tchirp +textra,fmin)\n\n        fisco = 1.0 / ( (6.0**1.5) * lal.PI * (m1_kg + m2_kg) * lal.MTSUN_SI / lal.MSUN_SI);\n\n        lalsim.SimInspiralTDConditionStage2(hp,hc, fmin,fisco)\n\n        if deltaF == 0:\n            chirplen = hp.data.length\n            chirplen_exp = np.frexp(chirplen)\n            chirplen = int(np.ldexp(1, chirplen_exp[1]))\n            deltaF = 1.0 / (chirplen * deltaT)\n            parameters[\"deltaF\"] = deltaF\n\n        else:\n            chirplen = int(1.0 / (deltaF * deltaT))\n\n        lal.ResizeREAL8TimeSeries(hp, hp.data.length - chirplen, chirplen)\n        lal.ResizeREAL8TimeSeries(hc, hc.data.length - chirplen, chirplen)\n\n        # FFT - Using LAL routines\n        hptilde = lal.CreateCOMPLEX16FrequencySeries(\n            \"FD H_PLUS\",\n            hp.epoch,\n            0.0,\n            deltaF,\n            lal.DimensionlessUnit,\n            int(chirplen / 2.0 + 1),\n        )\n        hctilde = lal.CreateCOMPLEX16FrequencySeries(\n            \"FD H_CROSS\",\n            hc.epoch,\n            0.0,\n            deltaF,\n            lal.DimensionlessUnit,\n            int(chirplen / 2.0 + 1),\n        )\n\n        plan = lal.CreateForwardREAL8FFTPlan(chirplen, 0)\n        lal.REAL8TimeFreqFFT(hctilde, hc, plan)\n        lal.REAL8TimeFreqFFT(hptilde, hp, plan)\n\n        # print('DBUG', type(hptilde),hptilde)\n        return hptilde.data, hctilde.data\n       \n    def _to_gwpy_series(self, modes_dict, times):\n        \"\"\"\n        Iterate over the dict and return a dict of gwpy TimeSeries objects\n        \"\"\"\n        gwpy_dict = {}\n        for ellm, mode in modes_dict.items():\n            gwpy_dict[ellm] = TimeSeries(mode, times=times, name='h_%i_%i'%(ellm[0], ellm[1]))\n        return gwpy_dict\n\n\n    def _strip_units(self, waveform_dict):\n        new_dc = {}\n        for key in waveform_dict.keys():\n            if isinstance(waveform_dict[key], u.Quantity):\n                new_dc[key] = waveform_dict[key].value\n            else:\n                new_dc[key] = waveform_dict[key]\n        return new_dc\n```\n\n\u003C/details>\n\n- gwsignal-like implementation that makes calls to gwsurrogate for the waveform at some parameters given by the PE code\n- The class `NRHybSur3dq8_gwsurr` inherits from `lalsimulation.gwsignal.core.waveform.CompactBinaryCoalescenceGenerator` and returns a waveform that is ready to go to bilby's likelihood function\n- Add file location to python path, eg. add to `.bashrc`:\n```bash\nexport PYTHONPATH=\"$HOME/src/new-waveforms-interface/python_interface/gwsignal/models:$PYTHONPATH\"\n```\n- Key methods in the class:\n    1. `generate_td_modes` makes calls to gwsurrogate; check for parameter consistencies here!\n    2. `generate_td_waveform` $h_+-ih_\\times=\\sum h_{lm}(t;\\lambda)_{-2}Y_{lm}(\\theta,\\phi)$\n    3. `generate_fd_polarizations_from_td` \n        1. adjusts `deltaT`\n        2. sets `epoch` as merger time\n        3. computes a frequency lower than `f_low`; taper between these two\n        4. resizes and returns FFTs of td waveforms\n\n# gwsurr_wrappers.py \n\u003Cdetails>\n\u003Csummary>Show Code\u003C/summary>\n\n```python \nfrom gwsurr import NRHybSur3dq8_gwsurr \nfrom astropy import units as u\nimport numpy as np \n\ngen = NRHybSur3dq8_gwsurr()\n\nfrom bilby.gw.conversion import chirp_mass_and_mass_ratio_to_component_masses\nfrom bilby.gw.waveform_generator import WaveformGenerator\n\ndef parameter_conversion(parameters):\n    mass_1,mass_2 = chirp_mass_and_mass_ratio_to_component_masses(parameters['chirp_mass'],parameters['mass_ratio'])\n    params = {\n        'mass1':mass_1,\n        'mass2':mass_2,\n        'spin1z':parameters['chi_1'],\n        'spin2z':parameters['chi_2'],\n        'distance':parameters['luminosity_distance'],\n        'inclination':parameters['theta_jn'],\n        'phi_ref':parameters['phase'],\n    }\n    keys=[]\n    for key in params.keys():\n        if key not in parameters.keys():\n            keys.append(key)\n    return params, keys\n\ndef get_waveform_generator(**kwargs):\n    # bilby sometimes defaults to the inbuilt BBH parameter conversion function, which we don't want\n    if not kwargs['parameter_conversion'] is parameter_conversion:\n        print(f\"PROG Updating parameter conversion function from {kwargs['parameter_conversion']} to {parameter_conversion}\")\n        kwargs['parameter_conversion']=parameter_conversion\n\n    return WaveformGenerator(**kwargs)\n\ndef NRHybSur3dq8_wrapper(freqs, mass1,mass2,spin1z,spin2z,distance,inclination,phi_ref,**waveform_arguments):\n    hp,hc =  gen.generate_fd_polarizations_from_td(\n        mass1=mass1*u.Msun,\n        mass2=mass2*u.Msun,\n        spin1z=spin1z*u.dimensionless_unscaled,\n        spin2z=spin2z*u.dimensionless_unscaled,\n        distance=distance*u.Mpc,\n        inclination=inclination*u.rad,\n        phi_ref=(phi_ref)*u.rad,\n        f22_start=waveform_arguments['f_min']*u.Hz,\n        f22_ref=waveform_arguments['reference_frequency']*u.Hz,\n        f_max = max(freqs)*u.Hz,\n        deltaF=(freqs[1]-freqs[0])*u.Hz,\n    )\n    return {'plus': hp.data, 'cross': hc.data}\n```\n\u003C/details>\n\n\n- Wrapper file exposed to bilby. \n- Ideally store in the same location as the previous`gwsurr.py`\n- Functions in this file:\n    1. `parameter_conversion` mostly a convention thing\n    2. `get_waveform_generator` wrapper to deal with parallel-bilby's occasional insolence \n    3. `NRHybSur3dq8_wrapper` function exposed to bilby (**do not change input/output format!**)\n\n# GW150914.ini\n\u003Cdetails>\n\u003Csummary> Show Code \u003C/summary>\n\n```bash\n################################################################################\n## Data generation arguments\n################################################################################\n\ntrigger-time=1126259462.391\n\n################################################################################\n## Detector arguments\n################################################################################\n\ndetectors = [H1, L1]\npsd_dict = {H1=psd_data/h1_psd.txt, L1=psd_data/l1_psd.txt}\nmaximum-frequency={ 'H1': 896, 'L1': 896,  }\nminimum-frequency={ 'H1': 20, 'L1': 20,  }\nchannel_dict = {H1:GWOSC, L1:GWOSC}\nduration = 4\n\n################################################################################\n## Job submission arguments\n################################################################################\n\nlabel = GW150914\noutdir = outdir\n\n################################################################################\n## Likelihood arguments\n################################################################################\n\ndistance-marginalization=True\nphase-marginalization=False\ntime-marginalization=True\njitter-time=True\nreference-frame=H1L1\ntime-reference=geocent\n\n################################################################################\n## Prior arguments\n################################################################################\n\nprior-dict={\n  chirp-mass: bilby.gw.prior.UniformInComponentsChirpMass(minimum=21.418182160215295, maximum=41.97447913941358, name='chirp_mass', boundary=None),\n  mass-ratio: bilby.gw.prior.UniformInComponentsMassRatio(minimum=0.11, maximum=1.0, name='mass_ratio', latex_label='$q$', unit=None, boundary=None),\n  mass-1: Constraint(minimum=15, maximum=60, name='mass_1', latex_label='$m_1$', unit=None),\n  mass-2: Constraint(minimum=15, maximum=60, name='mass_2', latex_label='$m_2$', unit=None),\n  chi-1: Uniform(minimum=-0.91, maximum=0.91, name='chi_1', latex_label='$\\chi_1$', unit=None, boundary=None),\n  chi-2: Uniform(minimum=-0.91, maximum=0.91, name='chi_2', latex_label='$\\chi_2$', unit=None, boundary=None),\n  luminosity-distance: PowerLaw(alpha=2, minimum=10, maximum=10000, name='luminosity_distance', latex_label='$d_L$', unit='Mpc', boundary=None),\n  theta-jn: Sine(minimum=0, maximum=3.141592653589793, name='theta_jn'),\n  psi: Uniform(minimum=0, maximum=3.141592653589793, name='psi', boundary='periodic'),\n  phase: Uniform(minimum=0, maximum=6.283185307179586, name='phase', boundary='periodic'),\n  dec: Cosine(name='dec'),\n  ra: Uniform(name='ra', minimum=0, maximum=2 * np.pi, boundary='periodic')\n}\nenforce-signal-duration=True\n################################################################################\n## Waveform arguments\n################################################################################\n\nwaveform-generator=gwsurr_wrappers.get_waveform_generator\nwaveform-approximant=NRSurr\nfrequency-domain-source-model=gwsurr_wrappers.NRHybSur3dq8_wrapper\nreference-frequency=20. \nwaveform-arguments-dict ={\n  f_min:20.,\n}\nconversion-function=gwsurr_wrappers.parameter_conversion\n###############################################################################\n## Sampler settings\n################################################################################\n\nsampler = dynesty\nnact = 5\nnlive = 1000\ndynesty-sample = rwalk\n\n################################################################################\n## Slurm Settings\n################################################################################\n\nnodes = 1\nntasks-per-node = 128\ntime = 24:00:00\nn-check-point = 10000\n```\n\u003C/details>\n\n- the `Waveform Arguments` section is the place to make changes\n\n```bash\nwaveform-generator=gwsurr_wrappers.get_waveform_generator\nwaveform-approximant=NRSurr\nfrequency-domain-source-model=gwsurr_wrappers.NRHybSur3dq8_wrapper\nreference-frequency=20. \nwaveform-arguments-dict ={\n  f_min:20.,\n}\nconversion-function=gwsurr_wrappers.parameter_conversion\n```\nfor some reason the code doesn't properly assign the conversion function, there is a check inside `get_waveform_generator` for this; to use a different approximant, make a new class in `gwsurr.py` and `gwsurr_wrappers.py` and specify it here under `frequency-domain-source-model`\n\n- create `psd_data/`; add `h1_psd.txt` and `l1_psd.txt`; [see here](https://git.ligo.org/lscsoft/parallel_bilby/-/tree/master/examples/GW150914/psd_data)\n- generate submission files with:\n```bash\nparallel_bilby_generation GW150914.ini\n```\nthis will create an `outdir/` with submission and other files\n# job file (SLURM, Unity)\ninside `outdir/submit/analysis_GW150914_0.sh` replace the lines above the `mpirun` command with:\n\u003Cdetails> \n\u003Csummary> Show Code \u003C/summary>\n\n```bash\n#!/bin/bash\n#SBATCH --job-name=0_GW150914\n#SBATCH --nodes=1\n#SBATCH --ntasks-per-node=128\n#SBATCH --time=24:00:00\n#SBATCH --output=outdir/log_data_analysis/0_GW150914_%j.log\n#SBATCH -p cpu-preempt\n\n\nsource ~/miniforge3/etc/profile.d/conda.sh\nconda activate igwn-py310\n```\n\u003C/details>\n\nthen submit job with:\n```bash\nsbatch outdir/submit/analysis_GW150914_0.sh\n```\n\n# pesummary\nwhen the pe run is complete, run in same directory as the .ini file:\n```bash\nsummarypages -a NRHybSur3dq8 --email vupadhyaya@umassd.edu --webdir pesummary --samples outdir/results/GW150914_0_result.json --labels NRHybSur3dq8 --gw\n```\n\nput the results out for the world to see, eg.\n```bash\ncd public/gw/parallel-bilby_pe/\nmkdir GW150914_gwsurrogate_new\ncd GW150914_gwsurrogate\nscp vupadhyaya_umassd_edu@unity.rc.umass.edu:/home/vupadhyaya_umassd_edu/surrogate_modeling/AlignedSpin/marginalization/parallel_bilby_pe/l_GW150914_gwsurrogate/pesummary .\n```","src/content/blog/gwsurrogate_pbilby.md",[90],"../../assets/NRHybSur3dq8_waveform_time_domain.png","43671833bef26fd3",{"html":93,"metadata":94},"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>\u003C/th>\u003Cth>\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>PE Code\u003C/td>\u003Ctd>parallel_bilby\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Waveform Generator\u003C/td>\u003Ctd>\u003Ccode>gwsurrogate\u003C/code>/\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Implementation\u003C/td>\u003Ctd>\u003Ccode>gwsignal\u003C/code>-like\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Waveform Model\u003C/td>\u003Ctd>NRHybSur3dq8\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Cluster\u003C/td>\u003Ctd>Unity\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch1 id=\"gwsurrpy\">gwsurr.py\u003C/h1>\n\u003Cdetails>\n\u003Csummary>Show Code\u003C/summary>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">try\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gwsurrogate \u003C/span>\u003Cspan style=\"color:#F97583\">as\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gwsurr\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">except\u003C/span>\u003Cspan style=\"color:#79B8FF\"> ImportError\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    print\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"The gwsurrogate package has failed to load, exiting\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> importlib_metadata \u003C/span>\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> metadata\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lal\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numpy \u003C/span>\u003Cspan style=\"color:#F97583\">as\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> np\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> astropy.coordinates \u003C/span>\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Angle, SkyCoord\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gwpy.timeseries \u003C/span>\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> TimeSeries\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> astropy.units \u003C/span>\u003Cspan style=\"color:#F97583\">as\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> u\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lalsimulation.gwsignal.core.waveform \u003C/span>\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> CompactBinaryCoalescenceGenerator\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lalsimulation.gwsignal.core.gw \u003C/span>\u003Cspan style=\"color:#F97583\">as\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gw\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lalsimulation.gwsignal.core.utils \u003C/span>\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> add_params_units\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lalsimulation \u003C/span>\u003Cspan style=\"color:#F97583\">as\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lalsim \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># ignore spin magnitude outside training space warnings\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> warnings\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">warnings.filterwarnings(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'ignore'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">message\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'.*Spin'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> NRHybSur3dq8_gwsurr\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">CompactBinaryCoalescenceGenerator\u003C/span>\u003Cspan style=\"color:#E1E4E8\">):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    def\u003C/span>\u003Cspan style=\"color:#79B8FF\"> __init__\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(self, \u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#E1E4E8\">kwargs):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">        self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.sur \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gwsurr.LoadSurrogate(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"NRHybSur3dq8\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">        self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">._update_domains()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    @\u003C/span>\u003Cspan style=\"color:#79B8FF\">property\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    def\u003C/span>\u003Cspan style=\"color:#B392F0\"> metadata\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(self):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        metadata \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"type\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"aligned-spin\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"f_ref_spin\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">True\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"modes\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">True\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"polarizations\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">True\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"implemented_domain\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"time\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"approximant\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> : \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'NRSurr'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"implementation\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> : \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Python\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"conditioning_routines\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> : \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'gwsignal'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> metadata\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    def\u003C/span>\u003Cspan style=\"color:#B392F0\"> generate_td_modes\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(self, \u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#E1E4E8\">parameters):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">        self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.parameter_check(\u003C/span>\u003Cspan style=\"color:#FFAB70\">units_sys\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Cosmo'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#E1E4E8\">parameters)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">        self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.waveform_dict \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">._strip_units(\u003C/span>\u003Cspan style=\"color:#79B8FF\">self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.waveform_dict)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        fmin, dt \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.waveform_dict[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"f22_start\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">], \u003C/span>\u003Cspan style=\"color:#79B8FF\">self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.waveform_dict[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"deltaT\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        f_ref \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.waveform_dict[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"f22_ref\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        m1, m2 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.waveform_dict[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"mass1\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">], \u003C/span>\u003Cspan style=\"color:#79B8FF\">self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.waveform_dict[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"mass2\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        s1z\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.waveform_dict[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"spin1z\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        s2z\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.waveform_dict[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"spin2z\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        chi1 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> np.array( [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">            0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">            0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            s1z,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        ])\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        chi2 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> np.array( [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">            0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">            0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            s2z,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        ])\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        dist \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.waveform_dict[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"distance\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        q \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> m1 \u003C/span>\u003Cspan style=\"color:#F97583\">/\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> m2  \u003C/span>\u003Cspan style=\"color:#6A737D\"># This is the gwsurrogate convention, q=m1/m2>=1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> q \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1.0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            q \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#F97583\"> /\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> q\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        # VU: reduce fmin to make sure tapering doesn't remove signal: [cf L#1046 in SimInspiral.c]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        extra_cycles \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">. \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        extra_time_fraction \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0.1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        m1_kg \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> m1 \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lal.\u003C/span>\u003Cspan style=\"color:#79B8FF\">MSUN_SI\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        m2_kg \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> m2 \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lal.\u003C/span>\u003Cspan style=\"color:#79B8FF\">MSUN_SI\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        tchirp \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lalsim.SimInspiralChirpTimeBound(fmin, m1_kg, m2_kg, s1z, s2z)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        s \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lalsim.SimInspiralFinalBlackHoleSpinBound(s1z,s2z)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        tmerge \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lalsim.SimInspiralMergeTimeBound(m1_kg,m2_kg)\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">lalsim.SimInspiralRingdownTimeBound(m1_kg\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">m2_kg,s)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        textra \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> extra_cycles \u003C/span>\u003Cspan style=\"color:#F97583\">/\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fmin\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        fstart \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lalsim.SimInspiralChirpStartFrequencyBound((\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">extra_time_fraction)\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">tchirp\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">tmerge\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">textra,m1_kg,m2_kg)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        times, h, dyn \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.sur(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            q,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            chi1,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            chi2,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">            dt\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">dt,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">            f_low\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">fstart,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">            f_ref\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">f_ref,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">            units\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"mks\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,  \u003C/span>\u003Cspan style=\"color:#6A737D\"># Output in SI units\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">            M\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">m1 \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> m2,  \u003C/span>\u003Cspan style=\"color:#6A737D\"># In solar masses\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">            dist_mpc\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">dist\u003C/span>\u003Cspan style=\"color:#F97583\">/\u003C/span>\u003Cspan style=\"color:#79B8FF\">1e6\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,  \u003C/span>\u003Cspan style=\"color:#6A737D\"># In Mpc\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        hlm \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">._to_gwpy_series(h, times)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gw.GravitationalWaveModes(hlm)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    def\u003C/span>\u003Cspan style=\"color:#B392F0\"> generate_td_waveform\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(self, \u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#E1E4E8\">parameters):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        # VU: added pi/2-phi_ref to match LALSuite convention\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        theta, phi \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'inclination'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">], (np.pi\u003C/span>\u003Cspan style=\"color:#F97583\">/\u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'phi_ref'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].value)\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">u.rad\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        hlm \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.generate_td_modes(\u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#E1E4E8\">parameters)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        hp, hc \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> hlm(theta, phi)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        hp, hc \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> TimeSeries(hp, \u003C/span>\u003Cspan style=\"color:#FFAB70\">name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'hplus'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">), TimeSeries(hc, \u003C/span>\u003Cspan style=\"color:#FFAB70\">name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'hcross'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> hp, hc\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    def\u003C/span>\u003Cspan style=\"color:#B392F0\"> generate_fd_polarizations_from_td\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(self, \u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#E1E4E8\">parameters):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        # Adjust deltaT depending on sampling rate\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        fmax \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"f_max\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].value\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        f_nyquist \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fmax\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        deltaF \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        if\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"deltaF\"\u003C/span>\u003Cspan style=\"color:#F97583\"> in\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> parameters.keys():\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            deltaF \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"deltaF\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].value\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> deltaF \u003C/span>\u003Cspan style=\"color:#F97583\">!=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            n \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(np.round(fmax \u003C/span>\u003Cspan style=\"color:#F97583\">/\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> deltaF))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> n \u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (n \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                chirplen_exp \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> np.frexp(n)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                f_nyquist \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> np.ldexp(\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(chirplen_exp[\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">])) \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> deltaF\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        deltaT \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0.5\u003C/span>\u003Cspan style=\"color:#F97583\"> /\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> f_nyquist\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"deltaT\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> deltaT\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">u.s\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        hp_,hc_ \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.generate_td_waveform(\u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#E1E4E8\">parameters)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        # VU: set epoch to merger time according to surrogate convention (instead of start time)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        epoch \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lal.LIGOTimeGPS(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            hp_.times[np.abs(np.array(hp_.times)).argmin()].value\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        hp \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lal.CreateREAL8TimeSeries(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"hplus\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, epoch, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"deltaT\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].value, lal.DimensionlessUnit, \u003C/span>\u003Cspan style=\"color:#79B8FF\">len\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(hp_)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        hc \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lal.CreateREAL8TimeSeries(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"hcross\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, epoch, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"deltaT\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].value, lal.DimensionlessUnit, \u003C/span>\u003Cspan style=\"color:#79B8FF\">len\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(hc_),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        hp.data.data \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> hp_.value\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        hc.data.data \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> hc_.value\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        m1 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'mass1'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].value\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        m2 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'mass2'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].value\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        s1z\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'spin1z'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].value\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        s2z\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'spin2z'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].value \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        fmin \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'f22_start'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].value\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        extra_cycles \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">. \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        extra_time_fraction \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0.1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        m1_kg \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> m1 \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lal.\u003C/span>\u003Cspan style=\"color:#79B8FF\">MSUN_SI\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        m2_kg \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> m2 \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lal.\u003C/span>\u003Cspan style=\"color:#79B8FF\">MSUN_SI\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        tchirp \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lalsim.SimInspiralChirpTimeBound(fmin, m1_kg, m2_kg, s1z, s2z)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        s \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lalsim.SimInspiralFinalBlackHoleSpinBound(s1z,s2z)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        tmerge \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lalsim.SimInspiralMergeTimeBound(m1_kg,m2_kg)\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">lalsim.SimInspiralRingdownTimeBound(m1_kg\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">m2_kg,s)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        textra \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> extra_cycles \u003C/span>\u003Cspan style=\"color:#F97583\">/\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fmin\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        fstart \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lalsim.SimInspiralChirpStartFrequencyBound((\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">extra_time_fraction)\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">tchirp\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">tmerge\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">textra,m1_kg,m2_kg)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        lalsim.SimInspiralTDConditionStage1(hp,hc, extra_time_fraction \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> tchirp \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\">textra,fmin)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        fisco \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1.0\u003C/span>\u003Cspan style=\"color:#F97583\"> /\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ( (\u003C/span>\u003Cspan style=\"color:#79B8FF\">6.0\u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#79B8FF\">1.5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lal.\u003C/span>\u003Cspan style=\"color:#79B8FF\">PI\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (m1_kg \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> m2_kg) \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lal.\u003C/span>\u003Cspan style=\"color:#79B8FF\">MTSUN_SI\u003C/span>\u003Cspan style=\"color:#F97583\"> /\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lal.\u003C/span>\u003Cspan style=\"color:#79B8FF\">MSUN_SI\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003Cspan style=\"color:#FDAEB7;font-style:italic\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        lalsim.SimInspiralTDConditionStage2(hp,hc, fmin,fisco)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> deltaF \u003C/span>\u003Cspan style=\"color:#F97583\">==\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            chirplen \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> hp.data.length\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            chirplen_exp \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> np.frexp(chirplen)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            chirplen \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(np.ldexp(\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, chirplen_exp[\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            deltaF \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1.0\u003C/span>\u003Cspan style=\"color:#F97583\"> /\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (chirplen \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> deltaT)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"deltaF\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> deltaF\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        else\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            chirplen \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">1.0\u003C/span>\u003Cspan style=\"color:#F97583\"> /\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (deltaF \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> deltaT))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        lal.ResizeREAL8TimeSeries(hp, hp.data.length \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> chirplen, chirplen)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        lal.ResizeREAL8TimeSeries(hc, hc.data.length \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> chirplen, chirplen)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        # FFT - Using LAL routines\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        hptilde \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lal.CreateCOMPLEX16FrequencySeries(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"FD H_PLUS\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            hp.epoch,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">            0.0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            deltaF,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            lal.DimensionlessUnit,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">            int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(chirplen \u003C/span>\u003Cspan style=\"color:#F97583\">/\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2.0\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        hctilde \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lal.CreateCOMPLEX16FrequencySeries(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"FD H_CROSS\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            hc.epoch,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">            0.0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            deltaF,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            lal.DimensionlessUnit,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">            int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(chirplen \u003C/span>\u003Cspan style=\"color:#F97583\">/\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2.0\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        plan \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lal.CreateForwardREAL8FFTPlan(chirplen, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        lal.REAL8TimeFreqFFT(hctilde, hc, plan)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        lal.REAL8TimeFreqFFT(hptilde, hp, plan)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        # print('DBUG', type(hptilde),hptilde)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> hptilde.data, hctilde.data\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">       \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    def\u003C/span>\u003Cspan style=\"color:#B392F0\"> _to_gwpy_series\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(self, modes_dict, times):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">        \"\"\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">        Iterate over the dict and return a dict of gwpy TimeSeries objects\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">        \"\"\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        gwpy_dict \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ellm, mode \u003C/span>\u003Cspan style=\"color:#F97583\">in\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> modes_dict.items():\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            gwpy_dict[ellm] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> TimeSeries(mode, \u003C/span>\u003Cspan style=\"color:#FFAB70\">times\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">times, \u003C/span>\u003Cspan style=\"color:#FFAB70\">name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'h_\u003C/span>\u003Cspan style=\"color:#79B8FF\">%i\u003C/span>\u003Cspan style=\"color:#9ECBFF\">_\u003C/span>\u003Cspan style=\"color:#79B8FF\">%i\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'\u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(ellm[\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">], ellm[\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gwpy_dict\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    def\u003C/span>\u003Cspan style=\"color:#B392F0\"> _strip_units\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(self, waveform_dict):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        new_dc \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> key \u003C/span>\u003Cspan style=\"color:#F97583\">in\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> waveform_dict.keys():\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            if\u003C/span>\u003Cspan style=\"color:#79B8FF\"> isinstance\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(waveform_dict[key], u.Quantity):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                new_dc[key] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> waveform_dict[key].value\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            else\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                new_dc[key] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> waveform_dict[key]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> new_dc\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/details>\n\u003Cul>\n\u003Cli>gwsignal-like implementation that makes calls to gwsurrogate for the waveform at some parameters given by the PE code\u003C/li>\n\u003Cli>The class \u003Ccode>NRHybSur3dq8_gwsurr\u003C/code> inherits from \u003Ccode>lalsimulation.gwsignal.core.waveform.CompactBinaryCoalescenceGenerator\u003C/code> and returns a waveform that is ready to go to bilby’s likelihood function\u003C/li>\n\u003Cli>Add file location to python path, eg. add to \u003Ccode>.bashrc\u003C/code>:\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">export\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> PYTHONPATH\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$HOME\u003C/span>\u003Cspan style=\"color:#9ECBFF\">/src/new-waveforms-interface/python_interface/gwsignal/models:\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$PYTHONPATH\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cul>\n\u003Cli>Key methods in the class:\n\u003Col>\n\u003Cli>\u003Ccode>generate_td_modes\u003C/code> makes calls to gwsurrogate; check for parameter consistencies here!\u003C/li>\n\u003Cli>\u003Ccode>generate_td_waveform\u003C/code> \u003Cmjx-container class=\"MathJax\" jax=\"SVG\">\u003Csvg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"33.867ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 14969.1 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\u003Cdefs>\u003Cpath id=\"MJX-1-TEX-I-210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-SO-2211\" d=\"M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-I-1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-N-3B\" d=\"M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-I-1D706\" d=\"M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-I-1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-I-1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\">\u003C/path>\u003Cpath id=\"MJX-1-TEX-I-1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\">\u003C/path>\u003C/defs>\u003Cg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\">\u003Cg data-mml-node=\"math\">\u003Cg data-mml-node=\"msub\">\u003Cg data-mml-node=\"mi\">\u003Cuse data-c=\"210E\" xlink:href=\"#MJX-1-TEX-I-210E\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"mo\" transform=\"translate(609,-150) scale(0.707)\">\u003Cuse data-c=\"2B\" xlink:href=\"#MJX-1-TEX-N-2B\">\u003C/use>\u003C/g>\u003C/g>\u003Cg data-mml-node=\"mo\" transform=\"translate(1431.4,0)\">\u003Cuse data-c=\"2212\" xlink:href=\"#MJX-1-TEX-N-2212\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"mi\" transform=\"translate(2431.6,0)\">\u003Cuse data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"msub\" transform=\"translate(2776.6,0)\">\u003Cg data-mml-node=\"mi\">\u003Cuse data-c=\"210E\" xlink:href=\"#MJX-1-TEX-I-210E\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"mo\" transform=\"translate(609,-150) scale(0.707)\">\u003Cuse data-c=\"D7\" xlink:href=\"#MJX-1-TEX-N-D7\">\u003C/use>\u003C/g>\u003C/g>\u003Cg data-mml-node=\"mo\" transform=\"translate(4263.5,0)\">\u003Cuse data-c=\"3D\" xlink:href=\"#MJX-1-TEX-N-3D\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"mo\" transform=\"translate(5319.3,0)\">\u003Cuse data-c=\"2211\" xlink:href=\"#MJX-1-TEX-SO-2211\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"msub\" transform=\"translate(6541.9,0)\">\u003Cg data-mml-node=\"mi\">\u003Cuse data-c=\"210E\" xlink:href=\"#MJX-1-TEX-I-210E\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"TeXAtom\" transform=\"translate(609,-150) scale(0.707)\" data-mjx-texclass=\"ORD\">\u003Cg data-mml-node=\"mi\">\u003Cuse data-c=\"1D459\" xlink:href=\"#MJX-1-TEX-I-1D459\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"mi\" transform=\"translate(298,0)\">\u003Cuse data-c=\"1D45A\" xlink:href=\"#MJX-1-TEX-I-1D45A\">\u003C/use>\u003C/g>\u003C/g>\u003C/g>\u003Cg data-mml-node=\"mo\" transform=\"translate(8032.5,0)\">\u003Cuse data-c=\"28\" xlink:href=\"#MJX-1-TEX-N-28\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"mi\" transform=\"translate(8421.5,0)\">\u003Cuse data-c=\"1D461\" xlink:href=\"#MJX-1-TEX-I-1D461\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"mo\" transform=\"translate(8782.5,0)\">\u003Cuse data-c=\"3B\" xlink:href=\"#MJX-1-TEX-N-3B\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"mi\" transform=\"translate(9227.1,0)\">\u003Cuse data-c=\"1D706\" xlink:href=\"#MJX-1-TEX-I-1D706\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"msub\" transform=\"translate(9810.1,0)\">\u003Cg data-mml-node=\"mo\">\u003Cuse data-c=\"29\" xlink:href=\"#MJX-1-TEX-N-29\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"TeXAtom\" transform=\"translate(422,-150) scale(0.707)\" data-mjx-texclass=\"ORD\">\u003Cg data-mml-node=\"mo\">\u003Cuse data-c=\"2212\" xlink:href=\"#MJX-1-TEX-N-2212\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"mn\" transform=\"translate(778,0)\">\u003Cuse data-c=\"32\" xlink:href=\"#MJX-1-TEX-N-32\">\u003C/use>\u003C/g>\u003C/g>\u003C/g>\u003Cg data-mml-node=\"msub\" transform=\"translate(11185.8,0)\">\u003Cg data-mml-node=\"mi\">\u003Cuse data-c=\"1D44C\" xlink:href=\"#MJX-1-TEX-I-1D44C\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"TeXAtom\" transform=\"translate(614,-150) scale(0.707)\" data-mjx-texclass=\"ORD\">\u003Cg data-mml-node=\"mi\">\u003Cuse data-c=\"1D459\" xlink:href=\"#MJX-1-TEX-I-1D459\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"mi\" transform=\"translate(298,0)\">\u003Cuse data-c=\"1D45A\" xlink:href=\"#MJX-1-TEX-I-1D45A\">\u003C/use>\u003C/g>\u003C/g>\u003C/g>\u003Cg data-mml-node=\"mo\" transform=\"translate(12681.4,0)\">\u003Cuse data-c=\"28\" xlink:href=\"#MJX-1-TEX-N-28\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"mi\" transform=\"translate(13070.4,0)\">\u003Cuse data-c=\"1D703\" xlink:href=\"#MJX-1-TEX-I-1D703\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"mo\" transform=\"translate(13539.4,0)\">\u003Cuse data-c=\"2C\" xlink:href=\"#MJX-1-TEX-N-2C\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"mi\" transform=\"translate(13984.1,0)\">\u003Cuse data-c=\"1D719\" xlink:href=\"#MJX-1-TEX-I-1D719\">\u003C/use>\u003C/g>\u003Cg data-mml-node=\"mo\" transform=\"translate(14580.1,0)\">\u003Cuse data-c=\"29\" xlink:href=\"#MJX-1-TEX-N-29\">\u003C/use>\u003C/g>\u003C/g>\u003C/g>\u003C/svg>\u003C/mjx-container>\u003C/li>\n\u003Cli>\u003Ccode>generate_fd_polarizations_from_td\u003C/code>\n\u003Col>\n\u003Cli>adjusts \u003Ccode>deltaT\u003C/code>\u003C/li>\n\u003Cli>sets \u003Ccode>epoch\u003C/code> as merger time\u003C/li>\n\u003Cli>computes a frequency lower than \u003Ccode>f_low\u003C/code>; taper between these two\u003C/li>\n\u003Cli>resizes and returns FFTs of td waveforms\u003C/li>\n\u003C/ol>\n\u003C/li>\n\u003C/ol>\n\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"gwsurr_wrapperspy\">gwsurr_wrappers.py\u003C/h1>\n\u003Cdetails>\n\u003Csummary>Show Code\u003C/summary>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gwsurr \u003C/span>\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> NRHybSur3dq8_gwsurr \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> astropy \u003C/span>\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> units \u003C/span>\u003Cspan style=\"color:#F97583\">as\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> u\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numpy \u003C/span>\u003Cspan style=\"color:#F97583\">as\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> np \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">gen \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> NRHybSur3dq8_gwsurr()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> bilby.gw.conversion \u003C/span>\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> chirp_mass_and_mass_ratio_to_component_masses\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> bilby.gw.waveform_generator \u003C/span>\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> WaveformGenerator\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">def\u003C/span>\u003Cspan style=\"color:#B392F0\"> parameter_conversion\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(parameters):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    mass_1,mass_2 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> chirp_mass_and_mass_ratio_to_component_masses(parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'chirp_mass'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">],parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'mass_ratio'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">])\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    params \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">        'mass1'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:mass_1,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">        'mass2'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:mass_2,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">        'spin1z'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'chi_1'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">],\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">        'spin2z'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'chi_2'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">],\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">        'distance'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'luminosity_distance'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">],\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">        'inclination'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'theta_jn'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">],\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">        'phi_ref'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:parameters[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'phase'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">],\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    keys\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> key \u003C/span>\u003Cspan style=\"color:#F97583\">in\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> params.keys():\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> key \u003C/span>\u003Cspan style=\"color:#F97583\">not\u003C/span>\u003Cspan style=\"color:#F97583\"> in\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> parameters.keys():\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            keys.append(key)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> params, keys\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">def\u003C/span>\u003Cspan style=\"color:#B392F0\"> get_waveform_generator\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#E1E4E8\">kwargs):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    # bilby sometimes defaults to the inbuilt BBH parameter conversion function, which we don't want\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    if\u003C/span>\u003Cspan style=\"color:#F97583\"> not\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> kwargs[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'parameter_conversion'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">is\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> parameter_conversion:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">        print\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">f\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"PROG Updating parameter conversion function from \u003C/span>\u003Cspan style=\"color:#79B8FF\">{\u003C/span>\u003Cspan style=\"color:#E1E4E8\">kwargs[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'parameter_conversion'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#79B8FF\">}\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> to \u003C/span>\u003Cspan style=\"color:#79B8FF\">{\u003C/span>\u003Cspan style=\"color:#E1E4E8\">parameter_conversion\u003C/span>\u003Cspan style=\"color:#79B8FF\">}\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        kwargs[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'parameter_conversion'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">parameter_conversion\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> WaveformGenerator(\u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#E1E4E8\">kwargs)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">def\u003C/span>\u003Cspan style=\"color:#B392F0\"> NRHybSur3dq8_wrapper\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(freqs, mass1,mass2,spin1z,spin2z,distance,inclination,phi_ref,\u003C/span>\u003Cspan style=\"color:#F97583\">**\u003C/span>\u003Cspan style=\"color:#E1E4E8\">waveform_arguments):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    hp,hc \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">  gen.generate_fd_polarizations_from_td(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">        mass1\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">mass1\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">u.Msun,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">        mass2\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">mass2\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">u.Msun,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">        spin1z\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">spin1z\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">u.dimensionless_unscaled,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">        spin2z\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">spin2z\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">u.dimensionless_unscaled,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">        distance\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">distance\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">u.Mpc,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">        inclination\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">inclination\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">u.rad,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">        phi_ref\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(phi_ref)\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">u.rad,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">        f22_start\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">waveform_arguments[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'f_min'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">u.Hz,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">        f22_ref\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">waveform_arguments[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'reference_frequency'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">u.Hz,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">        f_max\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> max\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(freqs)\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">u.Hz,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">        deltaF\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(freqs[\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">freqs[\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">])\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">u.Hz,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'plus'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: hp.data, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'cross'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: hc.data}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/details>\n\u003Cul>\n\u003Cli>Wrapper file exposed to bilby.\u003C/li>\n\u003Cli>Ideally store in the same location as the previous\u003Ccode>gwsurr.py\u003C/code>\u003C/li>\n\u003Cli>Functions in this file:\n\u003Col>\n\u003Cli>\u003Ccode>parameter_conversion\u003C/code> mostly a convention thing\u003C/li>\n\u003Cli>\u003Ccode>get_waveform_generator\u003C/code> wrapper to deal with parallel-bilby’s occasional insolence\u003C/li>\n\u003Cli>\u003Ccode>NRHybSur3dq8_wrapper\u003C/code> function exposed to bilby (\u003Cstrong>do not change input/output format!\u003C/strong>)\u003C/li>\n\u003C/ol>\n\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"gw150914ini\">GW150914.ini\u003C/h1>\n\u003Cdetails>\n\u003Csummary> Show Code \u003C/summary>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">################################################################################\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">## Data generation arguments\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">################################################################################\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">trigger-time\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">1126259462.391\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">################################################################################\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">## Detector arguments\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">################################################################################\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">detectors\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [H1, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">L1]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">psd_dict\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> {H1=psd_data/h1_psd.txt,\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> L1=psd_data/l1_psd.txt}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">maximum-frequency\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{ \u003C/span>\u003Cspan style=\"color:#B392F0\">'H1'\u003C/span>\u003Cspan style=\"color:#79B8FF\">:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 896,\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'L1':\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 896,\u003C/span>\u003Cspan style=\"color:#9ECBFF\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">minimum-frequency\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{ \u003C/span>\u003Cspan style=\"color:#B392F0\">'H1'\u003C/span>\u003Cspan style=\"color:#79B8FF\">:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 20,\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'L1':\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 20,\u003C/span>\u003Cspan style=\"color:#9ECBFF\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">channel_dict\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> {H1:GWOSC,\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> L1:GWOSC}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">duration\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 4\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">################################################################################\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">## Job submission arguments\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">################################################################################\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">label\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> GW150914\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">outdir\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> outdir\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">################################################################################\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">## Likelihood arguments\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">################################################################################\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">distance-marginalization\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">True\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">phase-marginalization\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">False\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">time-marginalization\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">True\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">jitter-time\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">True\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">reference-frame\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">H1L1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">time-reference\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">geocent\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">################################################################################\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">## Prior arguments\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">################################################################################\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">prior-dict\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  chirp-mass:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> bilby.gw.prior.UniformInComponentsChirpMass\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(minimum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">21.418182160215295,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> maximum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">41.97447913941358,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'chirp_mass',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> boundary\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">None\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003Cspan style=\"color:#9ECBFF\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  mass-ratio:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> bilby.gw.prior.UniformInComponentsMassRatio\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(minimum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">0.11,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> maximum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">1.0,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'mass_ratio',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> latex_label\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'$q$',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> unit\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">None,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> boundary\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">None\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003Cspan style=\"color:#9ECBFF\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  mass-1:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Constraint\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(minimum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">15,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> maximum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">60,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'mass_1',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> latex_label\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'$m_1$',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> unit\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">None\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003Cspan style=\"color:#9ECBFF\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  mass-2:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Constraint\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(minimum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">15,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> maximum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">60,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'mass_2',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> latex_label\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'$m_2$',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> unit\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">None\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003Cspan style=\"color:#9ECBFF\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  chi-1:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Uniform\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(minimum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">-0.91,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> maximum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">0.91,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'chi_1',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> latex_label\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'$\\chi_1$',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> unit\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">None,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> boundary\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">None\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003Cspan style=\"color:#9ECBFF\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  chi-2:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Uniform\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(minimum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">-0.91,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> maximum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">0.91,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'chi_2',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> latex_label\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'$\\chi_2$',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> unit\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">None,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> boundary\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">None\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003Cspan style=\"color:#9ECBFF\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  luminosity-distance:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> PowerLaw\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(alpha\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">2,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> minimum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">10,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> maximum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">10000,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'luminosity_distance',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> latex_label\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'$d_L$',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> unit\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Mpc',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> boundary\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">None\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003Cspan style=\"color:#9ECBFF\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  theta-jn:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Sine\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(minimum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">0,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> maximum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">3.141592653589793,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'theta_jn'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003Cspan style=\"color:#9ECBFF\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  psi:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Uniform\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(minimum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">0,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> maximum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">3.141592653589793,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'psi',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> boundary\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'periodic'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003Cspan style=\"color:#9ECBFF\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  phase:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Uniform\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(minimum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">0,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> maximum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">6.283185307179586,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'phase',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> boundary\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'periodic'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003Cspan style=\"color:#9ECBFF\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  dec:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Cosine\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'dec'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003Cspan style=\"color:#9ECBFF\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  ra:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Uniform\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'ra',\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> minimum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">0,\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> maximum\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">2\u003C/span>\u003Cspan style=\"color:#B392F0\"> *\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> np.pi,\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> boundary='periodic'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">enforce-signal-duration\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">True\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">################################################################################\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">## Waveform arguments\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">################################################################################\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">waveform-generator\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">gwsurr_wrappers.get_waveform_generator\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">waveform-approximant\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">NRSurr\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">frequency-domain-source-model\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">gwsurr_wrappers.NRHybSur3dq8_wrapper\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">reference-frequency\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">20.\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">waveform-arguments-dict\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ={\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  f_min:20.,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">conversion-function\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">gwsurr_wrappers.parameter_conversion\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">###############################################################################\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">## Sampler settings\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">################################################################################\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sampler\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> dynesty\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">nact\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 5\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">nlive\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1000\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">dynesty-sample\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> rwalk\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">################################################################################\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">## Slurm Settings\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">################################################################################\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">nodes\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">ntasks-per-node\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 128\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">time\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> = 24:00:00\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">n-check-point\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 10000\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/details>\n\u003Cul>\n\u003Cli>the \u003Ccode>Waveform Arguments\u003C/code> section is the place to make changes\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">waveform-generator\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">gwsurr_wrappers.get_waveform_generator\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">waveform-approximant\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">NRSurr\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">frequency-domain-source-model\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">gwsurr_wrappers.NRHybSur3dq8_wrapper\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">reference-frequency\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">20.\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">waveform-arguments-dict\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ={\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  f_min:20.,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">conversion-function\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">gwsurr_wrappers.parameter_conversion\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>for some reason the code doesn’t properly assign the conversion function, there is a check inside \u003Ccode>get_waveform_generator\u003C/code> for this; to use a different approximant, make a new class in \u003Ccode>gwsurr.py\u003C/code> and \u003Ccode>gwsurr_wrappers.py\u003C/code> and specify it here under \u003Ccode>frequency-domain-source-model\u003C/code>\u003C/p>\n\u003Cul>\n\u003Cli>create \u003Ccode>psd_data/\u003C/code>; add \u003Ccode>h1_psd.txt\u003C/code> and \u003Ccode>l1_psd.txt\u003C/code>; \u003Ca href=\"https://git.ligo.org/lscsoft/parallel_bilby/-/tree/master/examples/GW150914/psd_data\">see here\u003C/a>\u003C/li>\n\u003Cli>generate submission files with:\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">parallel_bilby_generation\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> GW150914.ini\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>this will create an \u003Ccode>outdir/\u003C/code> with submission and other files\u003C/p>\n\u003Ch1 id=\"job-file-slurm-unity\">job file (SLURM, Unity)\u003C/h1>\n\u003Cp>inside \u003Ccode>outdir/submit/analysis_GW150914_0.sh\u003C/code> replace the lines above the \u003Ccode>mpirun\u003C/code> command with:\u003C/p>\n\u003Cdetails> \n\u003Csummary> Show Code \u003C/summary>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">#!/bin/bash\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">#SBATCH --job-name=0_GW150914\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">#SBATCH --nodes=1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">#SBATCH --ntasks-per-node=128\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">#SBATCH --time=24:00:00\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">#SBATCH --output=outdir/log_data_analysis/0_GW150914_%j.log\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">#SBATCH -p cpu-preempt\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">source\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ~/miniforge3/etc/profile.d/conda.sh\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">conda\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> activate\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> igwn-py310\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/details>\n\u003Cp>then submit job with:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sbatch\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> outdir/submit/analysis_GW150914_0.sh\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch1 id=\"pesummary\">pesummary\u003C/h1>\n\u003Cp>when the pe run is complete, run in same directory as the .ini file:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">summarypages\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -a\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> NRHybSur3dq8\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --email\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> vupadhyaya@umassd.edu\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --webdir\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> pesummary\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --samples\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> outdir/results/GW150914_0_result.json\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --labels\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> NRHybSur3dq8\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --gw\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>put the results out for the world to see, eg.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">cd\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> public/gw/parallel-bilby_pe/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">mkdir\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> GW150914_gwsurrogate_new\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">cd\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> GW150914_gwsurrogate\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">scp\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> vupadhyaya_umassd_edu@unity.rc.umass.edu:/home/vupadhyaya_umassd_edu/surrogate_modeling/AlignedSpin/marginalization/parallel_bilby_pe/l_GW150914_gwsurrogate/pesummary\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> .\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\u003Cstyle>\nmjx-container[jax=\"SVG\"] {\n  direction: ltr;\n}\n\nmjx-container[jax=\"SVG\"] > svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=\"SVG\"] > svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax=\"SVG\"][display=\"true\"] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=\"SVG\"][display=\"true\"][width=\"full\"] {\n  display: flex;\n}\n\nmjx-container[jax=\"SVG\"][justify=\"left\"] {\n  text-align: left;\n}\n\nmjx-container[jax=\"SVG\"][justify=\"right\"] {\n  text-align: right;\n}\n\ng[data-mml-node=\"merror\"] > g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=\"merror\"] > rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=\"mtable\"] > line[data-line], svg[data-table] > g > line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=\"mtable\"] > rect[data-frame], svg[data-table] > g > rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=\"mtable\"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=\"mtable\"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=\"mtable\"] > g > svg {\n  overflow: visible;\n}\n\n[jax=\"SVG\"] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=\"SVG\"] mjx-tool > mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool > mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=\"maction\"][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=\"SVG\"] path[data-c], mjx-container[jax=\"SVG\"] use[data-c] {\n  stroke-width: 3;\n}\n\u003C/style>",{"headings":95,"localImagePaths":110,"remoteImagePaths":111,"frontmatter":112,"imagePaths":114},[96,99,102,105,108],{"depth":56,"slug":97,"text":98},"gwsurrpy","gwsurr.py",{"depth":56,"slug":100,"text":101},"gwsurr_wrapperspy","gwsurr_wrappers.py",{"depth":56,"slug":103,"text":104},"gw150914ini","GW150914.ini",{"depth":56,"slug":106,"text":107},"job-file-slurm-unity","job file (SLURM, Unity)",{"depth":56,"slug":109,"text":109},"pesummary",[],[],{"title":84,"description":15,"pubDate":113,"heroImage":90},"Oct 03 2025",[]]